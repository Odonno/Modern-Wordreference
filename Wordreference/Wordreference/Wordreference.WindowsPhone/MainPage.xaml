<Page
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:templateSelectors="using:Wordreference.TemplateSelectors"
    xmlns:converters="using:Wordreference.Styles.Converters"
    xmlns:WindowsPhone81="using:Microsoft.AdMediator.WindowsPhone81"
    x:Class="Wordreference.MainPage"
    mc:Ignorable="d"
    NavigationCacheMode="Required"
    DataContext="{Binding Source={StaticResource Locator}, Path=Main}"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>
        <!-- Theme converters -->
        <converters:RequestedThemeConverter x:Key="RequestedThemeConverter" />
        <converters:ItemBackgroundThemeConverter x:Key="BackgroundThemeConverter" />
        <converters:SecondaryItemBackgroundThemeConverter x:Key="SecondaryBackgroundThemeConverter" />
        <converters:SecondaryTextThemeConverter x:Key="SecondaryTextThemeConverter" />
        <converters:PrimaryThemeConverter x:Key="PrimaryThemeConverter" />
        <converters:SecondaryThemeConverter x:Key="SecondaryThemeConverter" />

        <!-- Data Source (translations) -->
        <CollectionViewSource x:Name="cvs" IsSourceGrouped="true" Source="{Binding TranslationViewModel.TranslatedKeyGroup}"/>

        <!-- DataTemplate for languages (flags) -->
        <DataTemplate x:Key="LanguageSelectedItemDataTemplate">
            <StackPanel Orientation="Horizontal">
                <Image Margin="10 0 0 0" MaxWidth="30" MaxHeight="30" Source="{Binding Image, Converter={StaticResource ImageConverter}}" />
                <TextBlock Foreground="#FF5E58C7" Margin="10 0 0 0" Text="{Binding Nom}" />
            </StackPanel>
        </DataTemplate>

        <!-- DataTemplate for translation -->
        <DataTemplate x:Key="TranslationsDataTemplate">
            <Grid MinHeight="80"
        		RequestedTheme="{Binding Settings.SelectedTheme, Converter={StaticResource RequestedThemeConverter}, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}"
        		Background="{Binding Settings.SelectedTheme, Converter={StaticResource BackgroundThemeConverter}, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Margin="5">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="{Binding TermeOriginal.Type}" Foreground="#0645AD" Margin="0 0 5 0" 
        					Visibility="{Binding TermeOriginal.Type, Converter={StaticResource StringToVisibilityConverter}}"/>
                        <TextBlock Grid.Column="1" Text="{Binding TermeOriginal.Nom}" TextWrapping="Wrap" />
                    </Grid>
                    <TextBlock Text="{Binding TermeOriginal.Sens}" 
        				Visibility="{Binding TermeOriginal.Sens, Converter={StaticResource StringToVisibilityConverter}}" 
        				TextWrapping="Wrap" FontStyle="Italic"/>
                </StackPanel>
                <StackPanel Grid.Column="1" Margin="5">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="{Binding FirstTranslation.Type}" Foreground="#0645AD" Margin="0 0 5 0" 
        					Visibility="{Binding FirstTranslation.Type, Converter={StaticResource StringToVisibilityConverter}}"/>
                        <TextBlock Grid.Column="1" Text="{Binding FirstTranslation.Nom}" TextWrapping="Wrap" />
                    </Grid>
                    <TextBlock Text="{Binding FirstTranslation.Sens}" 
        				Visibility="{Binding FirstTranslation.Sens, Converter={StaticResource StringToVisibilityConverter}}" 
        				TextWrapping="Wrap" FontStyle="Italic"/>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <!-- Alternative DataTemplate for translation -->
        <DataTemplate x:Key="AlternativeTranslationsDataTemplate">
            <Grid MinHeight="80"
        		RequestedTheme="{Binding Settings.SelectedTheme, Converter={StaticResource RequestedThemeConverter}, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}"
        		Background="{Binding Settings.SelectedTheme, Converter={StaticResource SecondaryBackgroundThemeConverter}, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Margin="5">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="{Binding TermeOriginal.Type}" Foreground="#0645AD" Margin="0 0 5 0" 
        					Visibility="{Binding TermeOriginal.Type, Converter={StaticResource StringToVisibilityConverter}}"/>
                        <TextBlock Grid.Column="1" Text="{Binding TermeOriginal.Nom}" TextWrapping="Wrap" />
                    </Grid>
                    <TextBlock Text="{Binding TermeOriginal.Sens}" 
        				Visibility="{Binding TermeOriginal.Sens, Converter={StaticResource StringToVisibilityConverter}}"
        				TextWrapping="Wrap" FontStyle="Italic"/>
                </StackPanel>
                <StackPanel Grid.Column="1" Margin="5">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="{Binding FirstTranslation.Type}" Foreground="#0645AD" Margin="0 0 5 0" 
        					Visibility="{Binding FirstTranslation.Type, Converter={StaticResource StringToVisibilityConverter}}"/>
                        <TextBlock Grid.Column="1" Text="{Binding FirstTranslation.Nom}" TextWrapping="Wrap" />
                    </Grid>
                    <TextBlock Text="{Binding FirstTranslation.Sens}" 
        				Visibility="{Binding FirstTranslation.Sens, Converter={StaticResource StringToVisibilityConverter}}"
        				TextWrapping="Wrap" FontStyle="Italic"/>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <!-- DataTemplateSelector for translation to mix between 'TranslationsDataTemplate' and 'AlternativeTranslationsDataTemplate' -->
        <templateSelectors:TranslationDataTemplateSelector x:Key="TranslationDataTemplateSelector"
                                                           TranslationTemplate="{StaticResource TranslationsDataTemplate}"
                                                           AlternativeTranslationTemplate="{StaticResource AlternativeTranslationsDataTemplate}"/>

        <!-- Jump Template (when SemanticZoom is out) -->
        <DataTemplate x:Key="TranslationsJumpTemplate">
            <Border Padding="5">
                <Border Background="{Binding Settings.SelectedTheme, Converter={StaticResource PrimaryThemeConverter}, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}">
                    <TextBlock Text="{Binding Group.Key}" FontSize="32" Padding="6" FontFamily="{StaticResource PhoneFontFamilySemiLight}"
        				Foreground="{Binding Settings.SelectedTheme, Converter={StaticResource SecondaryThemeConverter}, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" />
                </Border>
            </Border>
        </DataTemplate>

        <!-- Group Header Template of Translations -->
        <DataTemplate x:Key="TranslationsGroupHeaderTemplate">
            <Border Background="{Binding Settings.SelectedTheme, Converter={StaticResource PrimaryThemeConverter}, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}"
        		BorderBrush="Transparent" BorderThickness="6" Height="66">
                <TextBlock Text="{Binding Key}" FontSize="32" Padding="6" FontFamily="{StaticResource PhoneFontFamilySemiLight}"
        			Foreground="{Binding Settings.SelectedTheme, Converter={StaticResource SecondaryThemeConverter}, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" />
            </Border>
        </DataTemplate>

        <!-- Define width of buttons -->
        <Style TargetType="Button">
            <Setter Property="MinWidth" Value="30"/>
        </Style>

        <!-- Nutton style -->
        <Style x:Key="TextBlockButtonStyle" TargetType="ButtonBase">
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ButtonBase">
                        <Grid Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ApplicationPointerOverForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ApplicationPressedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ApplicationPressedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked"/>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="Text" Content="{TemplateBinding Content}" />
                            <Rectangle
        						x:Name="FocusVisualWhite"
        						IsHitTestVisible="False"
        						Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}"
        						StrokeEndLineCap="Square"
        						StrokeDashArray="1,1"
        						Opacity="0"
        						StrokeDashOffset="1.5"/>
                            <Rectangle
        						x:Name="FocusVisualBlack"
        						IsHitTestVisible="False"
        						Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}"
        						StrokeEndLineCap="Square"
        						StrokeDashArray="1,1"
        						Opacity="0"
        						StrokeDashOffset="0.5"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Height="50" Background="{Binding Settings.SelectedTheme, Converter={StaticResource PrimaryThemeConverter}, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}"
              RequestedTheme="{Binding Settings.SelectedTheme, ConverterParameter=inverse, Converter={StaticResource RequestedThemeConverter}, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}">
           
            <TextBlock HorizontalAlignment="Left" Text="wordreference" 
                       Margin="12 0 0 0" TextWrapping="Wrap" 
                       VerticalAlignment="Top" FontSize="36" 
                       Style="{StaticResource TitleTextBlockStyle}"
                       Canvas.ZIndex="0"
                       Foreground="{Binding Settings.SelectedTheme, Converter={StaticResource SecondaryThemeConverter}, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}"/>

            <WindowsPhone81:AdMediatorControl x:Name="AdMediator_BC069B" 
                                          HorizontalAlignment="Left" VerticalAlignment="Top"
                                          Height="50" Width="320"
                                          Id="AdMediator-Id-A8488576-22E0-46BD-9502-194E61621F3A"
                                          Canvas.ZIndex="1" />
        </Grid>

        <!-- The parameter block (languages, word) -->
        <StackPanel x:Name="parameterGrid" Grid.Row="1" DataContext="{Binding TranslationViewModel}"
			RequestedTheme="{Binding Settings.SelectedTheme, Converter={StaticResource RequestedThemeConverter}, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}"
			Background="{Binding Settings.SelectedTheme, Converter={StaticResource BackgroundThemeConverter}, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" >

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" x:Uid="/UIResources/fromText" Text="de" Margin="12" MinWidth="60"
					HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Center"
					Style="{StaticResource GroupHeaderTextBlockStyle}"
					Foreground="{Binding Settings.SelectedTheme, Converter={StaticResource SecondaryTextThemeConverter}, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" />
                <ComboBox Grid.Column="1" PlaceholderText="select a language" Margin="0 0 6 0"
					Padding="0" BorderThickness="0" VerticalAlignment="Center" 
					ItemsSource="{Binding LanguageFactory.Languages}"
					SelectedItem="{Binding LanguageDepart, Mode=TwoWay}"
					ItemTemplate="{StaticResource LanguageSelectedItemDataTemplate}"/>
            </Grid>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" x:Uid="/UIResources/toText" Text="vers" Margin="12" MinWidth="60"
					HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Center" 
					Style="{StaticResource GroupHeaderTextBlockStyle}"
					Foreground="{Binding Settings.SelectedTheme, Converter={StaticResource SecondaryTextThemeConverter}, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" />
                <ComboBox Grid.Column="1" PlaceholderText="select a language" Margin="0 0 6 0"
					Padding="0" BorderThickness="0" VerticalAlignment="Center" 
					ItemsSource="{Binding LanguageFactory.Languages}"
					SelectedItem="{Binding LanguageArrive, Mode=TwoWay}"
					ItemTemplate="{StaticResource LanguageSelectedItemDataTemplate}" />
            </Grid>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" x:Uid="/UIResources/wordText" Text="mot" Margin="12" MinWidth="60"
					HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Center"
					Style="{StaticResource GroupHeaderTextBlockStyle}"
					Foreground="{Binding Settings.SelectedTheme, Converter={StaticResource SecondaryTextThemeConverter}, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" />

                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="60"/>
                    </Grid.ColumnDefinitions>

                    <TextBox Grid.Column="0" TextWrapping="Wrap" Margin="0 0 10 0" KeyDown="Translation_OnKeyDown"
						Text="{Binding MotRecherche, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
						VerticalAlignment="Center" HorizontalAlignment="Stretch">
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="KeyDown">
                                <core:InvokeCommandAction Command="{Binding TranslateWithParamCommand}" InputConverter="{StaticResource EnterKeyDownConverter}"/>
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                    </TextBox>
                    <Button Grid.Column="1" Margin="0 0 6 0" Content="&#xE11A;" VerticalAlignment="Center" Width="36" 
						Padding="0" BorderThickness="0" HorizontalAlignment="Center"
						Command="{Binding TranslateCommand}" FontFamily="Segoe UI Symbol" FontSize="18" />
                    <Button Grid.Column="2" Margin="0 0 6 0" Content="&#xE13C;" VerticalAlignment="Center" Width="36" 
						Padding="0" BorderThickness="0" HorizontalAlignment="Center"
						Command="{Binding SwitchCommand}" FontFamily="Segoe UI Symbol" FontSize="18" />
                </Grid>

            </Grid>
        </StackPanel>

        <!-- Button of animation (show / hide block parameter) -->
        <Button x:Name="animationHiderButton" Grid.Row="2" Background="#FF5E58C7"
			Style="{StaticResource TextBlockButtonStyle}"
			HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <TextBlock x:Name="HideShowBlocktxt" VerticalAlignment="Center" FontSize="24" 
				HorizontalAlignment="Center" FontFamily="Segoe UI Symbol" Text="&#xE108;" />
        </Button>

        <!-- The SemanticZoom that contains Translations -->
        <Grid Grid.Row="3" DataContext="{Binding TranslationViewModel}"
			Background="{Binding Settings.SelectedTheme, Converter={StaticResource BackgroundThemeConverter}, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" >
            <SemanticZoom>
                <SemanticZoom.ZoomedInView>
                    <ListView IsHoldingEnabled="True"
						ItemsSource="{Binding Source={StaticResource cvs}}"
						ItemTemplateSelector="{StaticResource TranslationDataTemplateSelector}"
						ContinuumNavigationTransitionInfo.ExitElementContainer="True">
                        <ListView.GroupStyle>
                            <GroupStyle HidesIfEmpty="True" HeaderTemplate="{StaticResource TranslationsGroupHeaderTemplate}">
                                <GroupStyle.HeaderContainerStyle>
                                    <Style TargetType="ListViewHeaderItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    </Style>
                                </GroupStyle.HeaderContainerStyle>
                            </GroupStyle>
                        </ListView.GroupStyle>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                </SemanticZoom.ZoomedInView>
                <SemanticZoom.ZoomedOutView>
                    <ListView 
						Background="{Binding Settings.SelectedTheme, Converter={StaticResource BackgroundThemeConverter}, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}"
						ItemsSource="{Binding CollectionGroups, Source={StaticResource cvs}}"
						ItemTemplate="{StaticResource TranslationsJumpTemplate}">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                </SemanticZoom.ZoomedOutView>
            </SemanticZoom>
        </Grid>

        <!-- The ProgressRing is showed when a translation is in progress -->
        <ProgressRing Grid.Row="3" Width="100" Height="100" Foreground="#FF5E58C7" Background="Transparent" IsActive="{Binding TranslationViewModel.IsTranslating}" />
    </Grid>

    <Page.BottomAppBar>
        <CommandBar Background="#FF5E58C7" ClosedDisplayMode="Minimal">

            <CommandBar.SecondaryCommands>
                <AppBarButton x:Uid="/UIResources/aboutLabel" x:Name="aboutButton" Click="AboutButton_OnClick"/>
                <AppBarButton x:Uid="/UIResources/settingsLabel" x:Name="settingsButton" Click="SettingsButton_OnClick"/>
            </CommandBar.SecondaryCommands>
            <AppBarButton x:Name="pinButton" Label="pin" Command="{Binding PinCommand}" Icon="Pin" Visibility="{Binding CanPin, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}" />
            <AppBarButton x:Name="unpinButton" Label="unpin" Command="{Binding UnpinCommand}" Icon="UnPin" Visibility="{Binding CanUnpin, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"/>
        </CommandBar>
    </Page.BottomAppBar>
    
</Page>